using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VulnerabilityPrediction.Logging
{
    public class Logger
    {
        private static List<string> logList;
        //TODO: Support default file additions.
        static Logger()
        {
            logList = new List<string>();
            //logList.Add(FileManager.LogFile);
            
        }

        
        private static void PutMessage(string message)
        {
            foreach (var log in logList)
            {
                using (Stream stream = File.Open(log, FileMode.Append))
                {
                    TextWriter tw = new StreamWriter(stream);
                    tw.WriteLine(message);
                    tw.Close();
                }
            } 
        }

        public static void AddLogFile(string path)
        {
            //if (!File.Exists(path))
            //    File.Create(path);
            //File.Open(path, FileMode.Open, FileAccess.ReadWrite, FileShare.ReadWrite);
            logList.Add(path);
        }

        public static void Log(Exception e)
        {
            Log(LogLevel.Exception, e.Message);
        }

        public static void Log(string message)
        {
            Log(LogLevel.Warning, message);
        }
        public static void Log(LogLevel level, string message)
        {
            PutMessage(String.Format("{0}: {1}", level, message));
        }

        public static string LatestMessage()
        {
            try
            {
                var lines = File.ReadAllLines(logList.First());
                return lines[lines.Length - 1];
            }
            catch (Exception e)
            {
                Debug.WriteLine(e);
                return String.Empty;
            }
            
        }
    }

    public enum LogLevel
    {
        Debug,
        Warning,
        Exception,
        Critical,
        Fatal
    }
}
