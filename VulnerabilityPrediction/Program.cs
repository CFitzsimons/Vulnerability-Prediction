using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using VulnerabilityPrediction.Calculations;
using VulnerabilityPrediction.Formatting;
using VulnerabilityPrediction.Logging;

namespace VulnerabilityPrediction
{
    class Program
    {
        
        public static void Main()
        {


            UpdateService updater = new UpdateService();
            updater.UpdateRecords();


            /* Keep all below */
            DateTime frozen = DateTime.Now;
            DateTime latest = frozen.AddDays(7);

            var forecast = Prediction.GetPredictions(frozen, latest);
            ClassificationTree tree = new ClassificationTree();
            Dictionary<int, Classification> list = new Dictionary<int, Classification>();

            foreach (var item in forecast)
            {
                if (list.ContainsKey(item.DateReleased.Day))
                {
                    list[item.DateReleased.Day] = ClassificationTree.GetClass((ClassificationTree.GetValue(list[item.DateReleased.Day]) + ClassificationTree.GetValue(tree.Classify(item))) / 2.0);
                }
                else
                    list.Add(item.DateReleased.Day, tree.Classify(item));
            }
            foreach (var item in list.OrderBy(t => t.Key))
                Console.WriteLine("Prediction for [" + DateTime.Now.AddDays(item.Key).ToShortDateString() + "]: " + item.Value);

            Console.ReadLine();
        }


    }
}
